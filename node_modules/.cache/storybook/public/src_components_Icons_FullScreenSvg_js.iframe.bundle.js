"use strict";
(globalThis["webpackChunkonc_react_ui"] = globalThis["webpackChunkonc_react_ui"] || []).push([["src_components_Icons_FullScreenSvg_js"],{

/***/ "./src/components/Icons/FullScreenSvg.js":
/*!***********************************************!*\
  !*** ./src/components/Icons/FullScreenSvg.js ***!
  \***********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/oncsoftwaredesignosmanasar-nurselcansuozkan/onc-ui/src/components/Icons/FullScreenSvg.js";


const FullScreenSvg = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().forwardRef(_c = (props, svgRef) => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("svg", {
  width: "1rem",
  height: "1rem",
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 16 16",
  ref: svgRef,
  ...props,
  children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("path", {
    d: "M9.25 7.898a.27.27 0 00.18-.078l2.593-2.593 1.125 1.125a.497.497 0 00.352.148c.273 0 .5-.227.5-.5V2.5c0-.273-.227-.5-.5-.5H10c-.273 0-.5.227-.5.5 0 .133.055.258.148.352l1.125 1.125L8.18 6.57a.27.27 0 00-.078.18.27.27 0 00.078.18l.89.89a.27.27 0 00.18.078zM6 14c.273 0 .5-.227.5-.5a.497.497 0 00-.148-.352l-1.125-1.125L7.82 9.43a.27.27 0 00.078-.18.27.27 0 00-.078-.18l-.89-.89a.27.27 0 00-.18-.078.27.27 0 00-.18.078l-2.593 2.593-1.125-1.125A.497.497 0 002.5 9.5c-.273 0-.5.227-.5.5v3.5c0 .273.227.5.5.5H6z",
    fill: "#FFF",
    fillRule: "nonzero"
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 11,
    columnNumber: 5
  }, undefined)
}, void 0, false, {
  fileName: _jsxFileName,
  lineNumber: 3,
  columnNumber: 3
}, undefined));
_c2 = FullScreenSvg;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_c3 = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(FullScreenSvg));
var _c, _c2, _c3;
__webpack_require__.$Refresh$.register(_c, "FullScreenSvg$React.forwardRef");
__webpack_require__.$Refresh$.register(_c2, "FullScreenSvg");
__webpack_require__.$Refresh$.register(_c3, "%default%");
FullScreenSvg.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "FullScreenSvg"
};

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

}]);
//# sourceMappingURL=src_components_Icons_FullScreenSvg_js.iframe.bundle.js.map