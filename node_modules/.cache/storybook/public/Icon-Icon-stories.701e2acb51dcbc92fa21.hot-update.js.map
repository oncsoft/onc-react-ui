{"version":3,"file":"Icon-Icon-stories.701e2acb51dcbc92fa21.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAzBA;AAyBA;AAzBA;AAyBA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://onc-react-ui/./src/components/Icon/Icon.js"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '../../utils/theme';\nimport styleModules from './Icon.module.css';\nconst Icon = forwardRef(({ size = '1rem', type, children }, ref) => {\n  const theme = useTheme();\n  const styleVariables = {\n    '--primaryColor': theme.primaryColor,\n    '--errorColor': theme.errorColor,\n    '--disabledColor': theme.disabledColor,\n  };\n  return (\n    <>\n      {React.Children.map(children, (child) => {\n        console.error(child);\n        if (React.isValidElement(child)) {\n          return React.cloneElement(child, {\n            ref,\n            width: size,\n            height: size,\n            style: { ...styleVariables },\n            className: `${styleModules.icon} ${styleModules[type]}`,\n            preserveAspectRatio: 'none',\n            version: '1.1',\n          });\n        }\n        return null; // Geçersiz bir elementi atlayın veya işlemeyin\n      })}\n    </>\n  );\n});\n\nIcon.displayName = 'Icon';\n\nIcon.defaultProps = {\n  type: 'primary',\n};\n\nIcon.propTypes = {\n  size: PropTypes.string,\n  type: PropTypes.oneOf(['primary', 'secondary', 'disabled', 'warn']),\n  children: PropTypes.object,\n};\nexport default memo(Icon);\n"],"names":[],"sourceRoot":""}