{"version":3,"file":"Checkbox-Checkbox-stories.696641ebb7f2d9db172d.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA","sources":["webpack://onc-react-ui/./src/components/Icons/CheckSvg.js","webpack://onc-react-ui/./src/utils/defaultTheme.js","webpack://onc-react-ui/./src/utils/theme.js"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\r\nconst CheckSvg = forwardRef((props, svgRef) => (\r\n  <svg\r\n    width=\"1rem\"\r\n    height=\"1rem\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 16 16\"\r\n    ref={svgRef}\r\n    {...props}\r\n  >\r\n    <path\r\n      d=\"M6.599 12.5a.76.76 0 00.526-.212l1.053-1.03 5.605-5.485A.727.727 0 0014 5.258a.727.727 0 00-.217-.516l-1.053-1.03a.76.76 0 00-1.053 0L6.6 8.69 4.323 6.455a.76.76 0 00-1.053 0l-1.053 1.03A.727.727 0 002 8c0 .19.077.379.217.515l2.802 2.743 1.053 1.03a.76.76 0 00.527.212z\"\r\n      fill=\"#FFF\"\r\n      fillRule=\"nonzero\"\r\n    />\r\n  </svg>\r\n));\r\nexport default memo(CheckSvg);\r\n","const defaultTheme = {\n  primaryColor: '#6bb8e6',\n  secondaryColor: '#282c34',\n  shadowColor: '#1c1d1d',\n  errorColor: 'red',\n  disabledColor: '#393737',\n};\n\nexport default defaultTheme;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport defaultTheme from './defaultTheme';\n\nconst ThemeContext = React.createContext();\n\nexport const useTheme = () => {\n  return useContext(ThemeContext);\n};\n\nconst ThemeProvider = ({ children, theme }) => {\n  const selectedTheme = theme || defaultTheme;\n  return (\n    <ThemeContext.Provider value={selectedTheme}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nThemeProvider.propTypes = {\n  children: PropTypes.object,\n  theme: PropTypes.object,\n};\n\nexport default ThemeProvider;\n"],"names":[],"sourceRoot":""}