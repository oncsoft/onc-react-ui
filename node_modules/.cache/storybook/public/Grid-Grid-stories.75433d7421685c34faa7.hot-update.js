"use strict";
globalThis["webpackHotUpdateonc_ui"]("Grid-Grid-stories",{

/***/ "./src/components/Grid/Grid.stories.js":
/*!*********************************************!*\
  !*** ./src/components/Grid/Grid.stories.js ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Docs: () => (/* binding */ Docs),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Grid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Grid */ "./src/components/Grid/Grid.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/oncsoftwaredesignosmanasar-nurselcansuozkan/onc-ui/src/components/Grid/Grid.stories.js",
  _Docs$parameters,
  _Docs$parameters2,
  _Docs$parameters2$doc;


// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Grid System',
  component: _Grid__WEBPACK_IMPORTED_MODULE_0__["default"],
  parameters: {
    // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
    layout: 'centered'
  },
  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
  tags: ['autodocs'],
  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes
  argTypes: {
    backgroundColor: {
      control: 'color'
    }
  }
});
const Story = args => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_Grid__WEBPACK_IMPORTED_MODULE_0__["default"], {
  ...args,
  style: {
    background: 'red'
  },
  children: ' '
}, void 0, false, {
  fileName: _jsxFileName,
  lineNumber: 20,
  columnNumber: 23
}, undefined);
_c = Story;
const Docs = Story.bind({});
Docs.parameters = {
  ...Docs.parameters,
  docs: {
    ...((_Docs$parameters = Docs.parameters) === null || _Docs$parameters === void 0 ? void 0 : _Docs$parameters.docs),
    source: {
      originalSource: "args => <Grid {...args} style={{\n  background: 'red'\n}}>\n    {' '}\n  </Grid>",
      ...((_Docs$parameters2 = Docs.parameters) === null || _Docs$parameters2 === void 0 ? void 0 : (_Docs$parameters2$doc = _Docs$parameters2.docs) === null || _Docs$parameters2$doc === void 0 ? void 0 : _Docs$parameters2$doc.source)
    }
  }
};
var _c;
__webpack_require__.$Refresh$.register(_c, "Story");
const __namedExportsOrder = ["Docs"];

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

});