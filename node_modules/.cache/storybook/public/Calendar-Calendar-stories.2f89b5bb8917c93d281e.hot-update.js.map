{"version":3,"file":"Calendar-Calendar-stories.2f89b5bb8917c93d281e.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAIA;AAUA;AAAA;AAEA;AAbA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AA/EA;AACA;AAAA;AAgFA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA","sources":["webpack://onc-react-ui/./src/components/Calendar/Calendar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport stylesModule from './Calendar.module.css';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '../../utils/theme';\n\nconst Calendar = ({ disabledRangeList, onChange, style }) => {\n  const theme = useTheme();\n  const stylesVariables = {\n    '--primaryColor': theme.primaryColor,\n    '--secondaryColor': theme.secondaryColor,\n    '--shadowColor': theme.shadowColor,\n  };\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n\n  const handleDateClick = (date) => () => {\n    if (!disabledRangeList.includes(date.toDateString())) {\n      setSelectedDate(date);\n      onChange(date);\n    }\n  };\n\n  const goToPreviousMonth = () => {\n    const newMonth = new Date(currentMonth);\n    newMonth.setMonth(newMonth.getMonth() - 1);\n    setCurrentMonth(newMonth);\n  };\n\n  const goToNextMonth = () => {\n    const newMonth = new Date(currentMonth);\n    newMonth.setMonth(newMonth.getMonth() + 1);\n    setCurrentMonth(newMonth);\n  };\n\n  const daysInMonth = [];\n  const currentDate = new Date(currentMonth);\n  currentDate.setDate(1);\n\n  while (currentDate.getMonth() === currentMonth.getMonth()) {\n    daysInMonth.push(new Date(currentDate));\n    currentDate.setDate(currentDate.getDate() + 1);\n  }\n\n  return (\n    <div className={`${stylesModule.calendar}`} style={stylesVariables}>\n      <h2>\n        {currentMonth.toLocaleString('default', { month: 'long' })}{' '}\n        {currentMonth.getFullYear()} Takvimi\n      </h2>\n      <div className={`${stylesModule.navigation}`}>\n        <button onClick={goToPreviousMonth}>&lt; Önceki Ay</button>\n        <button onClick={goToNextMonth}>Sonraki Ay &gt;</button>\n      </div>\n      <div className={`${stylesModule.weekdays}`}>\n        <div>Pzt</div>\n        <div>Sal</div>\n        <div>Çar</div>\n        <div>Per</div>\n        <div>Cum</div>\n        <div>Cmt</div>\n        <div>Paz</div>\n      </div>\n      <div className={`${stylesModule.days}`}>\n        {daysInMonth.map((date) => (\n          <div\n            key={date.toDateString()}\n            className={`${stylesModule.day} ${\n              selectedDate &&\n              selectedDate.toDateString() === date.toDateString()\n                ? stylesModule.selected\n                : ''\n            } ${\n              disabledRangeList.includes(date.toDateString())\n                ? stylesModule.disabled\n                : ''\n            }`}\n            onClick={handleDateClick(date)}\n          >\n            {date.getDate()}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nCalendar.propTypes = {\n  disabledRangeList: PropTypes.array,\n  onChange: PropTypes.func,\n  style: PropTypes.object,\n};\n\nexport default Calendar;\n"],"names":[],"sourceRoot":""}