{"ast":null,"code":"var _jsxFileName = \"/Users/oncsoftwaredesignosmanasar-nurselcansuozkan/onc-ui/src/components/Icon/Icon.stories.js\",\n  _icon$parameters,\n  _icon$parameters2,\n  _icon$parameters2$doc;\nimport React from 'react';\nimport Icon from './Icon';\nimport Grid from '../Grid/Grid';\nimport * as icons from '../../index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'Guidelines/Iconography/Icon',\n  component: Icon,\n  argTypes: {\n    color: {\n      control: 'color',\n      defaultValue: '#fff'\n    },\n    primary: {\n      control: 'boolean',\n      defaultValue: true\n    },\n    secondary: {\n      control: 'boolean',\n      defaultValue: false\n    },\n    warn: {\n      control: 'boolean',\n      defaultValue: false\n    },\n    size: {\n      control: 'select',\n      defaultValue: 'md'\n    },\n    testId: {\n      table: {\n        disable: true\n      }\n    },\n    style: {\n      table: {\n        disable: true\n      }\n    },\n    className: {\n      table: {\n        disable: true\n      }\n    }\n  }\n};\nexport const icon = props => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: Object.keys(icons).map(key => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '10px',\n              color: '#fff'\n            },\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Icon, {\n            color: props.color,\n            primary: props.primary,\n            secondary: props.secondary,\n            warn: props.warn,\n            size: props.size,\n            children: /*#__PURE__*/React.createElement(icons[key])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this)\n}, void 0, false);\nicon.parameters = {\n  ...icon.parameters,\n  docs: {\n    ...((_icon$parameters = icon.parameters) === null || _icon$parameters === void 0 ? void 0 : _icon$parameters.docs),\n    source: {\n      originalSource: \"props => <>\\n    <Grid container spacing={2}>\\n      {Object.keys(icons).map(key => {\\n      return <>\\n            <Grid item={1}>\\n              <span style={{\\n            fontSize: '10px',\\n            color: '#fff'\\n          }}>{key}</span>\\n              <Icon color={props.color} primary={props.primary} secondary={props.secondary} warn={props.warn} size={props.size}>\\n                {React.createElement(icons[key])}\\n              </Icon>\\n            </Grid>\\n          </>;\\n    })}\\n    </Grid>\\n  </>\",\n      ...((_icon$parameters2 = icon.parameters) === null || _icon$parameters2 === void 0 ? void 0 : (_icon$parameters2$doc = _icon$parameters2.docs) === null || _icon$parameters2$doc === void 0 ? void 0 : _icon$parameters2$doc.source)\n    }\n  }\n};\nexport const __namedExportsOrder = [\"icon\"];\nicon.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"icon\"\n};","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import React from 'react';\nimport Icon from './Icon';\nimport Grid from '../Grid/Grid';\nimport * as icons from '../../index';\nexport default {\n  title: 'Guidelines/Iconography/Icon',\n  component: Icon,\n  argTypes: {\n    color: {\n      control: 'color',\n      defaultValue: '#fff'\n    },\n    primary: {\n      control: 'boolean',\n      defaultValue: true\n    },\n    secondary: {\n      control: 'boolean',\n      defaultValue: false\n    },\n    warn: {\n      control: 'boolean',\n      defaultValue: false\n    },\n    size: {\n      control: 'select',\n      defaultValue: 'md'\n    },\n    testId: {\n      table: {\n        disable: true\n      }\n    },\n    style: {\n      table: {\n        disable: true\n      }\n    },\n    className: {\n      table: {\n        disable: true\n      }\n    }\n  }\n};\nexport const icon = props => <>\n    <Grid container spacing={2}>\n      {Object.keys(icons).map(key => {\n      return <>\n            <Grid item={1}>\n              <span style={{\n            fontSize: '10px',\n            color: '#fff'\n          }}>{key}</span>\n              <Icon color={props.color} primary={props.primary} secondary={props.secondary} warn={props.warn} size={props.size}>\n                {React.createElement(icons[key])}\n              </Icon>\n            </Grid>\n          </>;\n    })}\n    </Grid>\n  </>;\nicon.parameters = {\n  ...icon.parameters,\n  docs: {\n    ...icon.parameters?.docs,\n    source: {\n      originalSource: \"props => <>\\n    <Grid container spacing={2}>\\n      {Object.keys(icons).map(key => {\\n      return <>\\n            <Grid item={1}>\\n              <span style={{\\n            fontSize: '10px',\\n            color: '#fff'\\n          }}>{key}</span>\\n              <Icon color={props.color} primary={props.primary} secondary={props.secondary} warn={props.warn} size={props.size}>\\n                {React.createElement(icons[key])}\\n              </Icon>\\n            </Grid>\\n          </>;\\n    })}\\n    </Grid>\\n  </>\",\n      ...icon.parameters?.docs?.source\n    }\n  }\n};"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}