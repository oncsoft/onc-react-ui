{"ast":null,"code":"import _objectSpread from\"/Users/oncsoftwaredesignosmanasar-nurselcansuozkan/onc-ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/oncsoftwaredesignosmanasar-nurselcansuozkan/onc-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _Docs$parameters,_Docs$parameters2,_Docs$parameters2$doc,_DropdownInput$parame,_DropdownInput$parame2,_DropdownInput$parame3;import React,{useState}from'react';import{action}from'@storybook/addon-actions';import Dropdown from'./Dropdown';import ThemeProvider from'../../utils/theme';// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export\nimport{jsx as _jsx}from\"react/jsx-runtime\";export default{title:'Dropdown',component:Dropdown,parameters:{// Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout\nlayout:'centered'},// This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs\ntags:['autodocs'],// More on argTypes: https://storybook.js.org/docs/react/api/argtypes\nargTypes:{}};var Story=function Story(args){var data=['a','b','c'];var _useState=useState('a'),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];return/*#__PURE__*/_jsx(ThemeProvider,{children:/*#__PURE__*/_jsx(Dropdown,_objectSpread(_objectSpread({},args),{},{value:value,onSelect:setValue,data:data,style:{width:400,height:400}}))});};export var Docs=Story.bind({});export var DropdownInput=function DropdownInput(){var data=['a','b','c'];var _useState3=useState('a'),_useState4=_slicedToArray(_useState3,2),value=_useState4[0],setValue=_useState4[1];return/*#__PURE__*/_jsx(ThemeProvider,{children:/*#__PURE__*/_jsx(Dropdown,{label:\"Dropdown Label\",value:value,data:data,onSelect:function onSelect(e){setValue(e);action('onSelect');}})});};Docs.parameters=_objectSpread(_objectSpread({},Docs.parameters),{},{docs:_objectSpread(_objectSpread({},(_Docs$parameters=Docs.parameters)===null||_Docs$parameters===void 0?void 0:_Docs$parameters.docs),{},{source:_objectSpread({originalSource:\"args => {\\n  const data = ['a', 'b', 'c'];\\n  const [value, setValue] = useState('a');\\n  return <ThemeProvider>\\n      <Dropdown {...args} value={value} onSelect={setValue} data={data} style={{\\n      width: 400,\\n      height: 400\\n    }}></Dropdown>\\n    </ThemeProvider>;\\n}\"},(_Docs$parameters2=Docs.parameters)===null||_Docs$parameters2===void 0?void 0:(_Docs$parameters2$doc=_Docs$parameters2.docs)===null||_Docs$parameters2$doc===void 0?void 0:_Docs$parameters2$doc.source)})});DropdownInput.parameters=_objectSpread(_objectSpread({},DropdownInput.parameters),{},{docs:_objectSpread(_objectSpread({},(_DropdownInput$parame=DropdownInput.parameters)===null||_DropdownInput$parame===void 0?void 0:_DropdownInput$parame.docs),{},{source:_objectSpread({originalSource:\"() => {\\n  const data = ['a', 'b', 'c'];\\n  const [value, setValue] = useState('a');\\n  return <ThemeProvider>\\n      <Dropdown label=\\\"Dropdown Label\\\" value={value} data={data} onSelect={e => {\\n      setValue(e);\\n      action('onSelect');\\n    }}></Dropdown>\\n    </ThemeProvider>;\\n}\"},(_DropdownInput$parame2=DropdownInput.parameters)===null||_DropdownInput$parame2===void 0?void 0:(_DropdownInput$parame3=_DropdownInput$parame2.docs)===null||_DropdownInput$parame3===void 0?void 0:_DropdownInput$parame3.source)})});export var __namedExportsOrder=[\"Docs\",\"DropdownInput\"];DropdownInput.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"DropdownInput\"};","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import React, { useState } from 'react';\nimport { action } from '@storybook/addon-actions';\nimport Dropdown from './Dropdown';\nimport ThemeProvider from '../../utils/theme';\n\n// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export\nexport default {\n  title: 'Dropdown',\n  component: Dropdown,\n  parameters: {\n    // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout\n    layout: 'centered'\n  },\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs\n  tags: ['autodocs'],\n  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes\n  argTypes: {}\n};\nconst Story = args => {\n  const data = ['a', 'b', 'c'];\n  const [value, setValue] = useState('a');\n  return <ThemeProvider>\n      <Dropdown {...args} value={value} onSelect={setValue} data={data} style={{\n      width: 400,\n      height: 400\n    }}></Dropdown>\n    </ThemeProvider>;\n};\nexport const Docs = Story.bind({});\nexport const DropdownInput = () => {\n  const data = ['a', 'b', 'c'];\n  const [value, setValue] = useState('a');\n  return <ThemeProvider>\n      <Dropdown label=\"Dropdown Label\" value={value} data={data} onSelect={e => {\n      setValue(e);\n      action('onSelect');\n    }}></Dropdown>\n    </ThemeProvider>;\n};\nDocs.parameters = {\n  ...Docs.parameters,\n  docs: {\n    ...Docs.parameters?.docs,\n    source: {\n      originalSource: \"args => {\\n  const data = ['a', 'b', 'c'];\\n  const [value, setValue] = useState('a');\\n  return <ThemeProvider>\\n      <Dropdown {...args} value={value} onSelect={setValue} data={data} style={{\\n      width: 400,\\n      height: 400\\n    }}></Dropdown>\\n    </ThemeProvider>;\\n}\",\n      ...Docs.parameters?.docs?.source\n    }\n  }\n};\nDropdownInput.parameters = {\n  ...DropdownInput.parameters,\n  docs: {\n    ...DropdownInput.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  const data = ['a', 'b', 'c'];\\n  const [value, setValue] = useState('a');\\n  return <ThemeProvider>\\n      <Dropdown label=\\\"Dropdown Label\\\" value={value} data={data} onSelect={e => {\\n      setValue(e);\\n      action('onSelect');\\n    }}></Dropdown>\\n    </ThemeProvider>;\\n}\",\n      ...DropdownInput.parameters?.docs?.source\n    }\n  }\n};"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}