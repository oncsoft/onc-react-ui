{"ast":null,"code":"import _objectSpread from\"/Users/oncsoftwaredesignosmanasar-nurselcansuozkan/onc-ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";var _Docs$parameters,_Docs$parameters2,_Docs$parameters2$doc,_IconUsage$parameters,_IconUsage$parameters2,_IconUsage$parameters3;import React from'react';import Icon from'./Icon';import*as icons from'../Icons';import ThemeProvider from'../../utils/theme';import Grid from'../Grid/Grid';import{AddSvg}from'../Icons';import defaultTheme from'../../utils/defaultTheme';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default{title:'Icon',component:Icon,parameters:{layout:'centered'},tags:['autodocs'],argTypes:{}};var Story=function Story(args){console.error('icons',icons);return/*#__PURE__*/_jsx(ThemeProvider,{children:/*#__PURE__*/_jsx(Grid,{container:true,justifyContent:'center',alignItems:'center',direction:'row',spacing:2,children:Object.keys(icons).map(function(key){return/*#__PURE__*/_jsxs(Grid,{container:true,direction:'column',item:1,children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'10px',color:defaultTheme.primaryColor},children:key}),/*#__PURE__*/_jsx(Icon,_objectSpread(_objectSpread({},args),{},{children:/*#__PURE__*/React.createElement(icons[key])}))]},key);})})});};export var Docs=Story.bind({});export var IconUsage=function IconUsage(){return/*#__PURE__*/_jsx(ThemeProvider,{children:/*#__PURE__*/_jsx(Icon,{size:\"1.rem\",type:\"primary\",children:/*#__PURE__*/_jsx(AddSvg,{})})});};Docs.parameters=_objectSpread(_objectSpread({},Docs.parameters),{},{docs:_objectSpread(_objectSpread({},(_Docs$parameters=Docs.parameters)===null||_Docs$parameters===void 0?void 0:_Docs$parameters.docs),{},{source:_objectSpread({originalSource:\"args => {\\n  console.error('icons', icons);\\n  return <ThemeProvider>\\n      <Grid container justifyContent={'center'} alignItems={'center'} direction={'row'} spacing={2}>\\n        {Object.keys(icons).map(key => {\\n        return <Grid container direction={'column'} item={1} key={key}>\\n              <div style={{\\n            fontSize: '10px',\\n            color: defaultTheme.primaryColor\\n          }}>\\n                {key}\\n              </div>\\n              <Icon {...args}>{React.createElement(icons[key])}</Icon>\\n            </Grid>;\\n      })}\\n      </Grid>\\n    </ThemeProvider>;\\n}\"},(_Docs$parameters2=Docs.parameters)===null||_Docs$parameters2===void 0?void 0:(_Docs$parameters2$doc=_Docs$parameters2.docs)===null||_Docs$parameters2$doc===void 0?void 0:_Docs$parameters2$doc.source)})});IconUsage.parameters=_objectSpread(_objectSpread({},IconUsage.parameters),{},{docs:_objectSpread(_objectSpread({},(_IconUsage$parameters=IconUsage.parameters)===null||_IconUsage$parameters===void 0?void 0:_IconUsage$parameters.docs),{},{source:_objectSpread({originalSource:\"() => {\\n  return <ThemeProvider>\\n      <Icon size=\\\"1.rem\\\" type=\\\"primary\\\">\\n        <AddSvg />\\n      </Icon>\\n    </ThemeProvider>;\\n}\"},(_IconUsage$parameters2=IconUsage.parameters)===null||_IconUsage$parameters2===void 0?void 0:(_IconUsage$parameters3=_IconUsage$parameters2.docs)===null||_IconUsage$parameters3===void 0?void 0:_IconUsage$parameters3.source)})});export var __namedExportsOrder=[\"Docs\",\"IconUsage\"];IconUsage.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"IconUsage\"};","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import React from 'react';\nimport Icon from './Icon';\nimport * as icons from '../Icons';\nimport ThemeProvider from '../../utils/theme';\nimport Grid from '../Grid/Grid';\nimport { AddSvg } from '../Icons';\nimport defaultTheme from '../../utils/defaultTheme';\nexport default {\n  title: 'Icon',\n  component: Icon,\n  parameters: {\n    layout: 'centered'\n  },\n  tags: ['autodocs'],\n  argTypes: {}\n};\nconst Story = args => {\n  console.error('icons', icons);\n  return <ThemeProvider>\n      <Grid container justifyContent={'center'} alignItems={'center'} direction={'row'} spacing={2}>\n        {Object.keys(icons).map(key => {\n        return <Grid container direction={'column'} item={1} key={key}>\n              <div style={{\n            fontSize: '10px',\n            color: defaultTheme.primaryColor\n          }}>\n                {key}\n              </div>\n              <Icon {...args}>{React.createElement(icons[key])}</Icon>\n            </Grid>;\n      })}\n      </Grid>\n    </ThemeProvider>;\n};\nexport const Docs = Story.bind({});\nexport const IconUsage = () => {\n  return <ThemeProvider>\n      <Icon size=\"1.rem\" type=\"primary\">\n        <AddSvg />\n      </Icon>\n    </ThemeProvider>;\n};\nDocs.parameters = {\n  ...Docs.parameters,\n  docs: {\n    ...Docs.parameters?.docs,\n    source: {\n      originalSource: \"args => {\\n  console.error('icons', icons);\\n  return <ThemeProvider>\\n      <Grid container justifyContent={'center'} alignItems={'center'} direction={'row'} spacing={2}>\\n        {Object.keys(icons).map(key => {\\n        return <Grid container direction={'column'} item={1} key={key}>\\n              <div style={{\\n            fontSize: '10px',\\n            color: defaultTheme.primaryColor\\n          }}>\\n                {key}\\n              </div>\\n              <Icon {...args}>{React.createElement(icons[key])}</Icon>\\n            </Grid>;\\n      })}\\n      </Grid>\\n    </ThemeProvider>;\\n}\",\n      ...Docs.parameters?.docs?.source\n    }\n  }\n};\nIconUsage.parameters = {\n  ...IconUsage.parameters,\n  docs: {\n    ...IconUsage.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <ThemeProvider>\\n      <Icon size=\\\"1.rem\\\" type=\\\"primary\\\">\\n        <AddSvg />\\n      </Icon>\\n    </ThemeProvider>;\\n}\",\n      ...IconUsage.parameters?.docs?.source\n    }\n  }\n};"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}