{"ast":null,"code":"var _jsxFileName = \"/Users/oncsoftwaredesignosmanasar-nurselcansuozkan/onc-ui/src/components/Icon/Icon.stories.js\",\n  _Docs$parameters,\n  _Docs$parameters2,\n  _Docs$parameters2$doc;\nimport React from 'react';\nimport Icon from './Icon';\nimport * as icons from '../Icons';\nimport Grid from '../Grid/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'Icon',\n  component: Icon,\n  parameters: {\n    layout: 'centered'\n  },\n  tags: ['autodocs'],\n  argTypes: {}\n};\nconst Story = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n      spacing: 8,\n      children: Object.keys(icons).map(key => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '10px',\n              color: '#fff'\n            },\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Icon, {\n            children: /*#__PURE__*/React.createElement(icons[key])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = Story;\nexport const Docs = Story.bind({});\nDocs.parameters = {\n  ...Docs.parameters,\n  docs: {\n    ...((_Docs$parameters = Docs.parameters) === null || _Docs$parameters === void 0 ? void 0 : _Docs$parameters.docs),\n    source: {\n      originalSource: \"() => {\\n  return <>\\n      <Grid container direction={'row'} justifyContent={'center'} alignItems={'center'} spacing={8}>\\n        {Object.keys(icons).map(key => {\\n        return <Grid item={1} key={key}>\\n              <span style={{\\n            fontSize: '10px',\\n            color: '#fff'\\n          }}>{key}</span>\\n              <Icon>{React.createElement(icons[key])}</Icon>\\n            </Grid>;\\n      })}\\n      </Grid>\\n    </>;\\n}\",\n      ...((_Docs$parameters2 = Docs.parameters) === null || _Docs$parameters2 === void 0 ? void 0 : (_Docs$parameters2$doc = _Docs$parameters2.docs) === null || _Docs$parameters2$doc === void 0 ? void 0 : _Docs$parameters2$doc.source)\n    }\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Story\");\nexport const __namedExportsOrder = [\"Docs\"];","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import React from 'react';\nimport Icon from './Icon';\nimport * as icons from '../Icons';\nimport Grid from '../Grid/Grid';\nexport default {\n  title: 'Icon',\n  component: Icon,\n  parameters: {\n    layout: 'centered'\n  },\n  tags: ['autodocs'],\n  argTypes: {}\n};\nconst Story = () => {\n  return <>\n      <Grid container direction={'row'} justifyContent={'center'} alignItems={'center'} spacing={8}>\n        {Object.keys(icons).map(key => {\n        return <Grid item={1} key={key}>\n              <span style={{\n            fontSize: '10px',\n            color: '#fff'\n          }}>{key}</span>\n              <Icon>{React.createElement(icons[key])}</Icon>\n            </Grid>;\n      })}\n      </Grid>\n    </>;\n};\nexport const Docs = Story.bind({});\nDocs.parameters = {\n  ...Docs.parameters,\n  docs: {\n    ...Docs.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <>\\n      <Grid container direction={'row'} justifyContent={'center'} alignItems={'center'} spacing={8}>\\n        {Object.keys(icons).map(key => {\\n        return <Grid item={1} key={key}>\\n              <span style={{\\n            fontSize: '10px',\\n            color: '#fff'\\n          }}>{key}</span>\\n              <Icon>{React.createElement(icons[key])}</Icon>\\n            </Grid>;\\n      })}\\n      </Grid>\\n    </>;\\n}\",\n      ...Docs.parameters?.docs?.source\n    }\n  }\n};"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}